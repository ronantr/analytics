version: '3.8'

services:
    dev:
        container_name: nestjs_api_dev
        build:
            context: .
            target: development
            dockerfile: ./backend/Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
        networks:
            - nesjs-network
        volumes:
            - ./backend:/home/node
        restart: unless-stopped
### Frontend ###
#    site-web:
#        image: node:18-alpine
#        working_dir: /app
#        ports:
#        - "80:80"
#        volumes:
#        - ./site-web:/app
#        command: sh -c "npm install && npm run start"

    analytics:
        image: node:18-alpine
        working_dir: /app
        ports:
        - "3001:3001"
        volumes:
        - ./frontend:/app
        command: sh -c "npm install && npm run start"
### DB ###
    database:
        container_name: nestjs_api_database
        image: postgres:12.2
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: nestjs_api
        networks:
            - nesjs-network
        volumes:
            - ./database:/var/lib/postgresql/data
        restart: unless-stopped
    adminer:
        container_name: nestjs_api_adminer
        image: adminer
        ports:
            - 8080:8080
        networks:
            - nesjs-network
        restart: unless-stopped
    mongo:
        image: mongo:latest
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
        ports:
            - 27017:27017
        volumes:
        - ./mongodb:/data/db



networks:
    nesjs-network: